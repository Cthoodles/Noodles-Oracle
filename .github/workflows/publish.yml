# .github/workflows/publish.yml
name: Release creation

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

        # Get part of the tag after the `v`
      - name: Extract tag version number
        id: get-version
        run: echo "version-without-v=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Get module JSON
        id: set_var
        run: |
          echo "PACKAGE_JSON=$(jq -c . < module.json)" >> $GITHUB_OUTPUT

        # Substitute the manifest and download URLs in the `module.json`.
      - name: Substitute manifest and download links for versioned ones
        id: sub_manifest_link_version
        uses: devops-actions/variable-substitution@v1.2
        with:
          files: module.json
        env:
          version: ${{ steps.get-version.outputs.version-without-v }}
          manifest: https://github.com/${{ github.repository }}/releases/latest/download/module.json
          download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.zip

        # Create a folder containing all the module stuff and zip it for the release
      - name: Create zip
        run: zip -r9 ./module.zip module.json assets/ lang/ packs/ scripts/ README.md LICENSE CHANGELOG.md

      - name: Update release with files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          name: ${{ steps.get-version.outputs.version-without-v }}
          artifacts: './module.json, ./module.zip'

      - name: Publish to FoundryVTT
        uses: cs96and/FoundryVTT-release-package@v1.0.2
        if: ${{ !github.event.release.prerelease && env.PACKAGE_TOKEN }}
        env:
          PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
        with:
          package-token: ${{ env.PACKAGE_TOKEN }}
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json
